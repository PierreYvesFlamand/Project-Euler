/**
 * Problem 45 - Triangular, Pentagonal, and Hexagonal
 *
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 *
 * Triangle     T_n = n(n+1)/2      1, 3,  6, 10, 15, ...
 * Pentagonal   P_n = n(3n - 1)/2   1, 5, 12, 22, 35, ...
 * Hexagonal    H_n = n(2n - 1)     1, 6, 15, 28, 45, ...
 *
 * It can be verified that T_{285} = P_{165} = H_{143} = 40755.
 * Find the next triangle number that is also pentagonal and hexagonal.
 */

let answer;

const triangleNumbers = [];
function addTriangleNumbersUntil(array, n) {
    do {
        array.push(array.length * (array.length + 1) / 2);
    } while (array[array.length - 1] <= n);
}

const pentagonalNumbers = [];
function addPentagonalNumbersUntil(array, n) {
    do {
        array.push(array.length * (3 * array.length - 1) / 2);
    } while (array[array.length - 1] <= n);
}

const hexagonalNumbers = [];
function addHexagonalNumbersUntil(array, n) {
    do {
        array.push(array.length * (2 * array.length - 1));
    } while (array[array.length - 1] <= n);
}

while (!answer) {
    addTriangleNumbersUntil(triangleNumbers);
    addPentagonalNumbersUntil(pentagonalNumbers, triangleNumbers[triangleNumbers.length - 1]);
    addHexagonalNumbersUntil(hexagonalNumbers, triangleNumbers[triangleNumbers.length - 1]);

    const n = triangleNumbers[triangleNumbers.length - 1];
    if (pentagonalNumbers.find((v) => v === n) && hexagonalNumbers.find((v) => v === n)) {
        if (n !== 1 && n !== 40755) {
            answer = n;
        }
    }
}

module.exports = answer;